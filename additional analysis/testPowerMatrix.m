% created by Trent Dillon on May 30th 2018
% code visaulizes power matrices for WEC for hueristics

clear all, close all, clc
%% set parameters

if exist('wec','var')
    x0 = wec.Tpc;
    y0 = wec.Hsc;
    gaussWidth = wec.w;
    rated_power = wec.r;
    cw = wec.cw;
    eta_ct = wec.eta_ct;
else
    x0 = 9; %[s] peak period center
    y0 = 4; %[m] significant wave height center
    gaussWidth = 15;
    rated_power = 15000; %[watts]
    cw = 1; %[m] capture width (???)
    eta_ct = 0.6; %static conversion/transmission inefficiency
end

xmin = 1; %[s] energy period min
xmax = 15; %[s] energy period max
ymin = 0; %[m] significant wave height min
ymax = 5; %[m] significant wave height max
rho = 1020; %[kg/m^3]
g = 9.81; %[m/s^2]
y = ymin:.25:ymax;
x = xmin:xmax;

%% create power matrix using Gaussian Distribution

close all
waveflux = zeros(length(y),length(x));
cwmatrix = zeros(length(y),length(x));

%E = 1/16 * rho * g * Hs^2;
%cg = g.*Tp./(4*pi);
%E*cg = [w/m of crest length]

for i = 1:length(x)
    for j = 1:length(y)
        waveflux(j,i) = (1/(16*4*pi))*rho*g^2*y(j)^2*x(i);
        cwmatrix(j,i) = cw*exp(-1*((x(i)-x0)^2+(y(j)-y0)^2)/gaussWidth);
    end
end

powermatrix = eta_ct*waveflux.*cwmatrix;

%scale to rated power
% mpm = max(powermatrix(:));
% powermatrix = powermatrix*(rated_power/mpm);
powermatrix(powermatrix>rated_power) = rated_power;

%% visualize

close all

figure
subplot(1,3,1)
pc = pcolor(x,y,powermatrix/1000);
colormap jet
%set(pc, 'EdgeColor', 'none'); %remove edges to better visualize
c = colorbar;
ylabel(c,'Power Produced [kW]','Fontsize',20)
axis square
axis tight
title('Artificial Power Matrix','Fontsize',20)
ylabel('Significant Wave Height [m]','Fontsize',20)
xlabel('Peak Period [s]','Fontsize',20)
set(gca,'Fontsize',20)
subplot(1,3,2)
pc = pcolor(x,y,cwmatrix);
colormap jet
%set(pc, 'EdgeColor', 'none'); %remove edges to better visualize
c = colorbar;
ylabel(c,'Capture Width [m]','Fontsize',20)
axis square
axis tight
title('Capture Width','Fontsize',20)
ylabel('Significant Wave Height [m]','Fontsize',20)
xlabel('Peak Period [s]','Fontsize',20)
set(gca,'Fontsize',20)
subplot(1,3,3)
pc = pcolor(x,y,waveflux/1000);
colormap jet
%set(pc, 'EdgeColor', 'none'); %remove edges to better visualize
c = colorbar;
ylabel(c,'Energy Flux [kW/m]','Fontsize',20)
axis square
axis tight
title('Wave Energy Flux','Fontsize',20)
ylabel('Significant Wave Height [m]','Fontsize',20)
xlabel('Peak Period [s]','Fontsize',20)
set(gca,'Fontsize',20)
% hold on
% for ii=1:length(x)
%   for jj = 1:length(y)
%       text(x(ii),y(jj),num2str(powermatrix(ii,jj)))
%   end
% end

set(gcf, 'Position', [100, 100, 1400, 500])

clear c pc

%% power time series

load('WETSForecastMatrix')

FM = WETSForecastMatrix.FM_subset;

clear WETSForecastMatrix

if ~exist('wec','var')
    wec.Hsc = y0;    %height center
    wec.Tpc = x0;    %period center
    wec.w = gaussWidth;     %width of normal dist
    wec.r = rated_power;   %rated (max) power of device
    wec.cw = cw;     %capture width at peak
    wec.eta_ct = eta_ct; %conversion efficiency
end

power_wec = zeros(size(FM,2),1);
power_amp = zeros(size(FM,2),1);
for i = 1:size(FM,2)
    power_wec(i) = powerFromWEC(FM(1,i,2),FM(1,i,3),wec);
    power_amp(i) = powerToAMP(power_wec(i));
end

figure
ax(1) = subplot(2,1,1);
plot(datetime(FM(1,:,1),'ConvertFrom','datenum'),power_wec/1000,'r');
grid on
ylabel('Power [kW]')
xlabel('Time')
title('Power Generated by WEC')
ax(2) = subplot(2,1,2);
plot(datetime(FM(1,:,1),'ConvertFrom','datenum'),power_amp/1000,'b');
grid on
ylabel('Power [kW]')
xlabel('Time')
title('Power Sent to AMP')
linkaxes(ax,'xy')


%% save

%save('powermatrix_normaldist','powermatrix')
