function [] = plotRtds(s1,s2,s3,s4,hsp,tpp)

for h=1:size(s1,2)
    for t=1:size(s1,1)
        M(h,t,1) = mean(s1(t,h).output.Pw_sim);
        %M(h,t,1) = s1(t,h).output.wec.CF;
        X(h,t,1) = s1(t,h).output.wec.Tp_ra;
        Y(h,t,1) = s1(t,h).output.wec.Hs_ra;
    end
end
tB(1) = s1(1,1).output.wec.B;
tE(1) = s1(1,1).output.wec.E_max;
for h=1:size(s2,2)
    for t=1:size(s2,1)
        M(h,t,2) = mean(s2(t,h).output.Pw_sim);
        %M(h,t,2) = s2(t,h).output.wec.CF;
        X(h,t,2) = s2(t,h).output.wec.Tp_ra;
        Y(h,t,2) = s2(t,h).output.wec.Hs_ra;
    end
end
tB(2) = s2(1,1).output.wec.B;
tE(2) = s2(1,1).output.wec.E_max;
for h=1:size(s3,2)
    for t=1:size(s3,1)
        M(h,t,3) = mean(s3(t,h).output.Pw_sim);
        %M(h,t,3) = s3(t,h).output.wec.CF;
        X(h,t,3) = s3(t,h).output.wec.Tp_ra;
        Y(h,t,3) = s3(t,h).output.wec.Hs_ra;
    end
end
tB(3) = s3(1,1).output.wec.B;
tE(3) = s3(1,1).output.wec.E_max;
for h=1:size(s4,2)
    for t=1:size(s4,1)
        M(h,t,4) = mean(s4(t,h).output.Pw_sim);
        %M(h,t,4) = s4(t,h).output.wec.CF;
        X(h,t,4) = s4(t,h).output.wec.Tp_ra;
        Y(h,t,4) = s4(t,h).output.wec.Hs_ra;
    end
end
tB(4) = s4(1,1).output.wec.B;
tE(4) = s4(1,1).output.wec.E_max;

figure
set(gcf,'Color','w')
for w = 1:4  
    ax(w) = subplot(4,1,w);
    p = pcolor(X(:,:,w),Y(:,:,w),M(:,:,w));
    colormap(brewermap(50,'reds'))
    axis equal
    xlim([min(X(:)) max(X(:))])
    ylim([min(Y(:)) max(Y(:))])
    xlabel('Rated Tp [s]')
    ylabel('Rated Hs [m]')
    title(['WEC = ' num2str(tB(w)) ...
        ' [m] and Battery = ' num2str(tE(w)) ' [kWh]'])
    c = colorbar('eastoutside');
    c.Label.String = 'avg power';
    %display optimum
    matC = squeeze(M(:,:,w));
    matX = squeeze(X(:,:,w));
    matY = squeeze(Y(:,:,w));
    [m(w),i(w)] = max(matC(:));
    disp([ num2str(tB(w)) 'm WEC has optimum of p_avg = ' ...
        num2str(m(w)) 'W, Hs = ' num2str(matY(w)) 'm  and Tp = ' ...
        num2str(matX(i(w))) 's'])
    [~,ix] = min(abs(matX - tbp));
    [~,iy] = min(abs(matY - hsp));
    disp([ num2str(tB(w)) 'm WEC has value of p_avg = ' ...
        num2str(m(w)) 'W, Hs = ' num2str(matY(w)) 'm  and Tp = ' ...
        num2str(matX(i(w))) 's'])
end

end

